{"openapi":"3.1.0","info":{"title":"Discovery API","description":"A local NotebookLM-like research application following Clean Architecture","version":"0.1.0"},"paths":{"/api/notebooks":{"post":{"tags":["notebooks"],"summary":"Create Notebook","description":"Create a new notebook.\n\nArgs:\n    request: Notebook creation data\n    service: Injected notebook service\n\nReturns:\n    Created notebook\n\nRaises:\n    HTTPException: 400 for validation errors, 409 for duplicate names","operationId":"create_notebook_api_notebooks_post","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateNotebookRequest"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookResponse"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"409":{"description":"Duplicate notebook name","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["notebooks"],"summary":"List Notebooks","description":"List all notebooks with optional filtering and sorting.\n\nArgs:\n    tags: Filter by tags (optional)\n    sort_by: Sort field (default: updated_at)\n    sort_order: Sort order (default: desc)\n    limit: Maximum number of results (optional)\n    offset: Number of results to skip (default: 0)\n    service: Injected notebook service\n\nReturns:\n    List of notebooks with total count","operationId":"list_notebooks_api_notebooks_get","parameters":[{"name":"tags","in":"query","required":false,"schema":{"anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"title":"Tags"}},{"name":"sort_by","in":"query","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/SortOption"}],"default":"updated_at","title":"Sort By"}},{"name":"sort_order","in":"query","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/SortOrder"}],"default":"desc","title":"Sort Order"}},{"name":"limit","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}}],"responses":{"200":{"description":"List of notebooks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookListResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}":{"get":{"tags":["notebooks"],"summary":"Get Notebook","description":"Get a notebook by its ID.\n\nArgs:\n    notebook_id: UUID of the notebook\n    service: Injected notebook service\n\nReturns:\n    Notebook details\n\nRaises:\n    HTTPException: 404 if notebook not found","operationId":"get_notebook_api_notebooks__notebook_id__get","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["notebooks"],"summary":"Update Notebook","description":"Update an existing notebook.\n\nArgs:\n    notebook_id: UUID of the notebook to update\n    request: Update data (partial updates supported)\n    service: Injected notebook service\n\nReturns:\n    Updated notebook\n\nRaises:\n    HTTPException: 400 for validation errors, 404 if not found, 409 for duplicate names","operationId":"update_notebook_api_notebooks__notebook_id__put","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateNotebookRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookResponse"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Duplicate notebook name","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["notebooks"],"summary":"Delete Notebook","description":"Delete a notebook.\n\nArgs:\n    notebook_id: UUID of the notebook to delete\n    cascade: If True, delete all sources and outputs (default: False)\n    service: Injected notebook service\n\nReturns:\n    204 No Content on success\n\nRaises:\n    HTTPException: 400 if has children and cascade=False, 404 if not found","operationId":"delete_notebook_api_notebooks__notebook_id__delete","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}},{"name":"cascade","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Cascade"}}],"responses":{"204":{"description":"Successful Response"},"400":{"description":"Cannot delete (has children)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/rename":{"patch":{"tags":["notebooks"],"summary":"Rename Notebook","description":"Rename a notebook.\n\nArgs:\n    notebook_id: UUID of the notebook to rename\n    request: New name\n    service: Injected notebook service\n\nReturns:\n    Renamed notebook\n\nRaises:\n    HTTPException: 400 for validation errors, 404 if not found, 409 for duplicate names","operationId":"rename_notebook_api_notebooks__notebook_id__rename_patch","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenameNotebookRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookResponse"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Duplicate notebook name","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/tags":{"post":{"tags":["notebooks"],"summary":"Add Tags","description":"Add tags to a notebook.\n\nArgs:\n    notebook_id: UUID of the notebook\n    request: Tags to add\n    service: Injected notebook service\n\nReturns:\n    Updated notebook\n\nRaises:\n    HTTPException: 404 if notebook not found","operationId":"add_tags_api_notebooks__notebook_id__tags_post","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddTagsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["notebooks"],"summary":"Remove Tags","description":"Remove tags from a notebook.\n\nArgs:\n    notebook_id: UUID of the notebook\n    request: Tags to remove\n    service: Injected notebook service\n\nReturns:\n    Updated notebook\n\nRaises:\n    HTTPException: 404 if notebook not found","operationId":"remove_tags_api_notebooks__notebook_id__tags_delete","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RemoveTagsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotebookResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/file":{"post":{"tags":["sources"],"summary":"Import File Source","description":"Import a file source into a notebook.\n\nThe content will be automatically extracted from the file using the appropriate extraction method.\n\nArgs:\n    request: File source import data (name, file_path, file_type, notebook_id)\n    service: Injected source service\n    content_extraction_provider: Injected content extraction provider\n\nReturns:\n    Created source\n\nRaises:\n    HTTPException: 400 for validation/extraction errors, 404 if notebook not found, 409 for duplicates","operationId":"import_file_source_api_sources_file_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportFileSourceRequest"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceResponse"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Duplicate content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/url":{"post":{"tags":["sources"],"summary":"Import Url Source","description":"Import a URL source into a notebook.\n\nThe content will be automatically fetched from the URL.\nThe name/title will be extracted from the page if not provided.\n\nArgs:\n    request: URL source import data (url, notebook_id, optional title)\n    service: Injected source service\n    web_fetch_provider: Injected web fetch provider\n\nReturns:\n    Created source\n\nRaises:\n    HTTPException: 400 for validation/fetch errors, 404 if notebook not found, 409 for duplicates","operationId":"import_url_source_api_sources_url_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportUrlSourceRequest"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceResponse"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Duplicate content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/{source_id}":{"get":{"tags":["sources"],"summary":"Get Source","description":"Get a source by its ID.\n\nArgs:\n    source_id: UUID of the source\n    include_deleted: Include soft-deleted sources\n    service: Injected source service\n\nReturns:\n    Source details\n\nRaises:\n    HTTPException: 404 if source not found","operationId":"get_source_api_sources__source_id__get","parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Source Id"}},{"name":"include_deleted","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Include Deleted"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceResponse"}}}},"404":{"description":"Source not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["sources"],"summary":"Delete Source","description":"Soft delete a source.\n\nArgs:\n    source_id: UUID of the source to delete\n    notebook_id: UUID of the parent notebook (for validation)\n    service: Injected source service\n\nReturns:\n    204 No Content on success\n\nRaises:\n    HTTPException: 404 if source not found","operationId":"delete_source_api_sources__source_id__delete","parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Source Id"}},{"name":"notebook_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Source not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/notebook/{notebook_id}":{"get":{"tags":["sources"],"summary":"List Sources By Notebook","description":"List all sources for a notebook with optional filtering and sorting.\n\nArgs:\n    notebook_id: UUID of the notebook\n    include_deleted: Include soft-deleted sources\n    source_type: Filter by source type ('file' or 'url')\n    file_type: Filter by file type (for file sources)\n    sort_by: Sort field (default: created_at)\n    sort_order: Sort order (default: desc)\n    limit: Maximum number of results (optional)\n    offset: Number of results to skip (default: 0)\n    service: Injected source service\n\nReturns:\n    List of sources with total count","operationId":"list_sources_by_notebook_api_sources_notebook__notebook_id__get","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}},{"name":"include_deleted","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Include Deleted"}},{"name":"source_type","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Type"}},{"name":"file_type","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"File Type"}},{"name":"sort_by","in":"query","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/SortOption"}],"default":"created_at","title":"Sort By"}},{"name":"sort_order","in":"query","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/SortOrder"}],"default":"desc","title":"Sort Order"}},{"name":"limit","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}}],"responses":{"200":{"description":"List of sources for notebook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceListResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/{source_id}/rename":{"patch":{"tags":["sources"],"summary":"Rename Source","description":"Rename a source.\n\nArgs:\n    source_id: UUID of the source to rename\n    request: New name\n    service: Injected source service\n\nReturns:\n    Renamed source\n\nRaises:\n    HTTPException: 400 for validation errors, 404 if not found","operationId":"rename_source_api_sources__source_id__rename_patch","parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Source Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenameSourceRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceResponse"}}}},"400":{"description":"Validation error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Source not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/{source_id}/restore":{"post":{"tags":["sources"],"summary":"Restore Source","description":"Restore a soft-deleted source.\n\nArgs:\n    source_id: UUID of the source to restore\n    notebook_id: UUID of the parent notebook (for validation)\n    service: Injected source service\n\nReturns:\n    Restored source\n\nRaises:\n    HTTPException: 400 if not deleted, 404 if not found","operationId":"restore_source_api_sources__source_id__restore_post","parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Source Id"}},{"name":"notebook_id","in":"query","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceResponse"}}}},"400":{"description":"Source not deleted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Source not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/{source_id}/extract":{"post":{"tags":["sources"],"summary":"Extract Content","description":"Extract content from a source.\n\nArgs:\n    source_id: UUID of the source\n    request: Extraction parameters\n    service: Injected source service\n\nReturns:\n    Source with extracted content\n\nRaises:\n    HTTPException: 404 if source not found","operationId":"extract_content_api_sources__source_id__extract_post","parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Source Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractContentRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourceResponse"}}}},"404":{"description":"Source not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/sources/{source_id}/preview":{"get":{"tags":["sources"],"summary":"Get Source Preview","description":"Get a preview of source content.\n\nArgs:\n    source_id: UUID of the source\n    length: Length of preview (default: 500 characters)\n    service: Injected source service\n\nReturns:\n    Source preview\n\nRaises:\n    HTTPException: 404 if source not found","operationId":"get_source_preview_api_sources__source_id__preview_get","parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Source Id"}},{"name":"length","in":"query","required":false,"schema":{"type":"integer","default":500,"title":"Length"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SourcePreviewResponse"}}}},"404":{"description":"Source not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/ingest":{"post":{"tags":["vector-search"],"summary":"Ingest Notebook","description":"Ingest a notebook and its sources into the vector database.\n\nThis endpoint segments the content of all sources in the notebook into chunks\nand stores them with embeddings in the vector database for similarity search.\n\nArgs:\n    notebook_id: UUID of the notebook to ingest\n    request: Ingestion parameters (chunk size, overlap, force reingest)\n    service: Injected vector ingestion service\n\nReturns:\n    Ingestion result with count of chunks created\n\nRaises:\n    HTTPException: 404 if notebook not found, 500 if ingestion fails","operationId":"ingest_notebook_api_notebooks__notebook_id__ingest_post","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/IngestNotebookRequest"}],"default":{"chunk_size":1000,"overlap":200,"force_reingest":false},"title":"Request"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IngestNotebookResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Ingestion failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/similar":{"get":{"tags":["vector-search"],"summary":"Search Similar Content","description":"Search for similar content within a notebook using semantic similarity.\n\nThis endpoint performs a vector similarity search to find content chunks\nthat are semantically similar to the query text.\n\nArgs:\n    notebook_id: UUID of the notebook to search within\n    query: Search query text\n    limit: Maximum number of results to return\n    service: Injected content similarity service\n\nReturns:\n    List of similar content chunks with relevance scores\n\nRaises:\n    HTTPException: 404 if notebook not found, 500 if search fails","operationId":"search_similar_content_api_notebooks__notebook_id__similar_get","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}},{"name":"query","in":"query","required":true,"schema":{"type":"string","minLength":1,"maxLength":10000,"description":"Search query text","title":"Query"},"description":"Search query text"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Maximum number of results","default":10,"title":"Limit"},"description":"Maximum number of results"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimilaritySearchResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Search failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/vectors/count":{"get":{"tags":["vector-search"],"summary":"Get Vector Count","description":"Get the count of vectors stored for a notebook.\n\nArgs:\n    notebook_id: UUID of the notebook\n    service: Injected content similarity service\n\nReturns:\n    Count of vectors in the vector database\n\nRaises:\n    HTTPException: 404 if notebook not found","operationId":"get_vector_count_api_notebooks__notebook_id__vectors_count_get","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VectorCountResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/vectors":{"delete":{"tags":["vector-search"],"summary":"Delete Notebook Vectors","description":"Delete all vectors associated with a notebook.\n\nArgs:\n    notebook_id: UUID of the notebook\n    service: Injected vector ingestion service\n\nReturns:\n    204 No Content on success\n\nRaises:\n    HTTPException: 404 if notebook not found","operationId":"delete_notebook_vectors_api_notebooks__notebook_id__vectors_delete","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/collection":{"post":{"tags":["vector-search"],"summary":"Create Collection","description":"Create a vector collection for a notebook.\n\nThis endpoint creates a Weaviate collection with the schema defined for storing\nnotebook content chunks. The collection name follows the pattern 'Notebook{notebook_id_without_hyphens}'.\n\nArgs:\n    notebook_id: UUID of the notebook to create collection for (from path)\n    request: Collection creation parameters (currently empty)\n    service: Injected vector ingestion service\n\nReturns:\n    Collection creation result with collection name and status\n\nRaises:\n    HTTPException: 404 if notebook not found, 500 if creation fails","operationId":"create_collection_api_notebooks__notebook_id__collection_post","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CreateCollectionRequest"}],"default":{},"title":"Request"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCollectionResponse"}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Collection creation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notebooks/{notebook_id}/collection/debug":{"get":{"tags":["vector-search"],"summary":"Debug Collection","description":"Debug endpoint to check collection contents and counts.\n\nThis endpoint helps troubleshoot collection issues by showing both\nfiltered and unfiltered counts, plus sample data.","operationId":"debug_collection_api_notebooks__notebook_id__collection_debug_get","parameters":[{"name":"notebook_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Notebook Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Notebook not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Debug failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/articles/search":{"post":{"tags":["articles"],"summary":"Search Articles","description":"Search for high-quality blog articles that answer a specific question.\n\nThis endpoint uses AI-powered search to find authoritative, in-depth articles\nthat provide comprehensive answers to the given question.\n\nArgs:\n    request: ArticleSearchRequest containing the question and search parameters\n    service: Injected ArticleSearchService\n\nReturns:\n    ArticleSearchResponse: List of found articles with titles and links\n\nRaises:\n    HTTPException: If the search fails or validation errors occur","operationId":"search_articles_articles_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ArticleSearchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ArticleSearchResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Root","description":"Root endpoint.","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/health":{"get":{"summary":"Health Check","description":"Health check endpoint.","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"AddTagsRequest":{"properties":{"tags":{"items":{"type":"string"},"type":"array","minItems":1,"title":"Tags","description":"Tags to add"}},"type":"object","required":["tags"],"title":"AddTagsRequest","description":"Request model for adding tags to a notebook."},"ArticleResponse":{"properties":{"title":{"type":"string","title":"Title","description":"The title of the article"},"link":{"type":"string","title":"Link","description":"The URL link to the article"}},"type":"object","required":["title","link"],"title":"ArticleResponse","description":"Response model for individual articles."},"ArticleSearchRequest":{"properties":{"question":{"type":"string","minLength":1,"title":"Question","description":"The question to search for articles about"},"max_results":{"type":"integer","maximum":20.0,"minimum":1.0,"title":"Max Results","description":"Maximum number of articles to return","default":10}},"type":"object","required":["question"],"title":"ArticleSearchRequest","description":"Request model for article search."},"ArticleSearchResponse":{"properties":{"robust_articles":{"items":{"$ref":"#/components/schemas/ArticleResponse"},"type":"array","title":"Robust Articles","description":"List of found articles"}},"type":"object","required":["robust_articles"],"title":"ArticleSearchResponse","description":"Response model for article search results."},"CreateCollectionRequest":{"properties":{},"type":"object","title":"CreateCollectionRequest","description":"Request to create a collection for a notebook."},"CreateCollectionResponse":{"properties":{"notebook_id":{"type":"string","format":"uuid","title":"Notebook Id"},"collection_name":{"type":"string","title":"Collection Name"},"message":{"type":"string","title":"Message"},"created":{"type":"boolean","title":"Created"}},"type":"object","required":["notebook_id","collection_name","message","created"],"title":"CreateCollectionResponse","description":"Response from collection creation."},"CreateNotebookRequest":{"properties":{"name":{"type":"string","maxLength":255,"minLength":1,"title":"Name","description":"Notebook name"},"description":{"anyOf":[{"type":"string","maxLength":2000},{"type":"null"}],"title":"Description","description":"Notebook description"},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"List of tags"}},"type":"object","required":["name"],"title":"CreateNotebookRequest","description":"Request model for creating a notebook."},"ErrorResponse":{"properties":{"error":{"type":"string","title":"Error"},"details":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Details"}},"type":"object","required":["error"],"title":"ErrorResponse","description":"Response model for errors."},"ExtractContentRequest":{"properties":{"force":{"type":"boolean","title":"Force","description":"Force re-extraction even if already extracted","default":false}},"type":"object","title":"ExtractContentRequest","description":"Request model for extracting content from a source."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ImportFileSourceRequest":{"properties":{"notebook_id":{"type":"string","format":"uuid","title":"Notebook Id","description":"UUID of the parent notebook"},"name":{"type":"string","maxLength":500,"minLength":1,"title":"Name","description":"Source name"},"file_path":{"type":"string","minLength":1,"title":"File Path","description":"Path to the file (content will be extracted automatically)"},"file_type":{"type":"string","title":"File Type","description":"File type (pdf, docx, doc, txt, md)"}},"type":"object","required":["notebook_id","name","file_path","file_type"],"title":"ImportFileSourceRequest","description":"Request model for importing a file source."},"ImportUrlSourceRequest":{"properties":{"notebook_id":{"type":"string","format":"uuid","title":"Notebook Id","description":"UUID of the parent notebook"},"url":{"type":"string","minLength":1,"title":"Url","description":"Source URL (content will be fetched automatically)"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title","description":"Page title/name (optional, will be extracted from page if not provided)"}},"type":"object","required":["notebook_id","url"],"title":"ImportUrlSourceRequest","description":"Request model for importing a URL source."},"IngestNotebookRequest":{"properties":{"chunk_size":{"type":"integer","maximum":5000.0,"minimum":100.0,"title":"Chunk Size","default":1000},"overlap":{"type":"integer","maximum":1000.0,"minimum":0.0,"title":"Overlap","default":200},"force_reingest":{"type":"boolean","title":"Force Reingest","default":false}},"type":"object","title":"IngestNotebookRequest","description":"Request to ingest notebook into vector database."},"IngestNotebookResponse":{"properties":{"notebook_id":{"type":"string","format":"uuid","title":"Notebook Id"},"chunks_ingested":{"type":"integer","title":"Chunks Ingested"},"message":{"type":"string","title":"Message"}},"type":"object","required":["notebook_id","chunks_ingested","message"],"title":"IngestNotebookResponse","description":"Response from notebook ingestion."},"NotebookListResponse":{"properties":{"notebooks":{"items":{"$ref":"#/components/schemas/NotebookResponse"},"type":"array","title":"Notebooks"},"total":{"type":"integer","title":"Total"}},"type":"object","required":["notebooks","total"],"title":"NotebookListResponse","description":"Response model for a list of notebooks."},"NotebookResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags"},"source_count":{"type":"integer","title":"Source Count"},"output_count":{"type":"integer","title":"Output Count"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["id","name","description","tags","source_count","output_count","created_at","updated_at"],"title":"NotebookResponse","description":"Response model for a notebook."},"RemoveTagsRequest":{"properties":{"tags":{"items":{"type":"string"},"type":"array","minItems":1,"title":"Tags","description":"Tags to remove"}},"type":"object","required":["tags"],"title":"RemoveTagsRequest","description":"Request model for removing tags from a notebook."},"RenameNotebookRequest":{"properties":{"new_name":{"type":"string","maxLength":255,"minLength":1,"title":"New Name","description":"New notebook name"}},"type":"object","required":["new_name"],"title":"RenameNotebookRequest","description":"Request model for renaming a notebook."},"RenameSourceRequest":{"properties":{"new_name":{"type":"string","maxLength":500,"minLength":1,"title":"New Name","description":"New source name"}},"type":"object","required":["new_name"],"title":"RenameSourceRequest","description":"Request model for renaming a source."},"SimilaritySearchResponse":{"properties":{"query":{"type":"string","title":"Query"},"results":{"items":{"$ref":"#/components/schemas/SimilaritySearchResultItem"},"type":"array","title":"Results"},"total":{"type":"integer","title":"Total"}},"type":"object","required":["query","results","total"],"title":"SimilaritySearchResponse","description":"Response from similarity search."},"SimilaritySearchResultItem":{"properties":{"text":{"type":"string","title":"Text"},"source_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Source Id"},"chunk_index":{"type":"integer","title":"Chunk Index"},"distance":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Distance"},"certainty":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Certainty"},"source_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Name"}},"type":"object","required":["text","source_id","chunk_index","distance","certainty"],"title":"SimilaritySearchResultItem","description":"Single result from similarity search."},"SortOption":{"type":"string","enum":["name","created_at","updated_at","source_count"],"title":"SortOption","description":"Sort options for listings."},"SortOrder":{"type":"string","enum":["asc","desc"],"title":"SortOrder","description":"Sort order direction."},"SourceListResponse":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/SourceResponse"},"type":"array","title":"Sources"},"total":{"type":"integer","title":"Total"}},"type":"object","required":["sources","total"],"title":"SourceListResponse","description":"Response model for a list of sources."},"SourcePreviewResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"preview":{"type":"string","title":"Preview"},"full_text_length":{"type":"integer","title":"Full Text Length"}},"type":"object","required":["id","name","preview","full_text_length"],"title":"SourcePreviewResponse","description":"Response model for source content preview."},"SourceResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"notebook_id":{"type":"string","format":"uuid","title":"Notebook Id"},"name":{"type":"string","title":"Name"},"source_type":{"type":"string","title":"Source Type"},"file_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"File Type"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"file_path":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"File Path"},"file_size":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"File Size"},"content_hash":{"type":"string","title":"Content Hash"},"extracted_text":{"type":"string","title":"Extracted Text"},"metadata":{"type":"object","title":"Metadata"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"deleted_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Deleted At"}},"type":"object","required":["id","notebook_id","name","source_type","file_type","url","file_path","file_size","content_hash","extracted_text","metadata","created_at","updated_at","deleted_at"],"title":"SourceResponse","description":"Response model for a source."},"UpdateNotebookRequest":{"properties":{"name":{"anyOf":[{"type":"string","maxLength":255,"minLength":1},{"type":"null"}],"title":"Name","description":"New notebook name"},"description":{"anyOf":[{"type":"string","maxLength":2000},{"type":"null"}],"title":"Description","description":"New description"},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"New tags (replaces existing)"}},"type":"object","title":"UpdateNotebookRequest","description":"Request model for updating a notebook."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"ValidationErrorDetail":{"properties":{"field":{"type":"string","title":"Field"},"message":{"type":"string","title":"Message"},"code":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Code"}},"type":"object","required":["field","message"],"title":"ValidationErrorDetail","description":"Details for a single validation error."},"ValidationErrorResponse":{"properties":{"error":{"type":"string","title":"Error"},"validation_errors":{"items":{"$ref":"#/components/schemas/ValidationErrorDetail"},"type":"array","title":"Validation Errors"}},"type":"object","required":["error","validation_errors"],"title":"ValidationErrorResponse","description":"Response model for validation errors."},"VectorCountResponse":{"properties":{"notebook_id":{"type":"string","format":"uuid","title":"Notebook Id"},"vector_count":{"type":"integer","title":"Vector Count"}},"type":"object","required":["notebook_id","vector_count"],"title":"VectorCountResponse","description":"Response for vector count."}}}}